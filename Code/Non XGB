{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Non XGB","provenance":[],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"IO4qugkbHW-h"},"source":["# Library"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4XGoQWnNSXK0","executionInfo":{"status":"ok","timestamp":1627528339215,"user_tz":240,"elapsed":13279,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}},"outputId":"41d17ea9-1aa1-4aa2-bd02-967bdf3c19b1"},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","import xgboost\n","import sklearn\n","\n","from xgboost import plot_importance\n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import cross_val_score\n","from sklearn.model_selection import train_test_split\n","\n","\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import precision_score, recall_score\n","from sklearn.metrics import f1_score\n","from sklearn.metrics import precision_recall_curve\n","from sklearn.metrics import roc_curve\n","from sklearn.metrics import roc_auc_score\n","from numpy import std\n","\n","from sklearn.model_selection import StratifiedShuffleSplit\n","from sklearn.utils import resample\n","\n","import scipy as sc\n","\n","from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"_s3L68kWHU6l"},"source":["# Data Preparation"]},{"cell_type":"code","metadata":{"id":"1v4rdGdDUFoy","executionInfo":{"status":"ok","timestamp":1627528342736,"user_tz":240,"elapsed":686,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}}},"source":["# import detection data\n","df = pd.read_excel('/content/drive/My Drive/Colab_Notebooks/covid_detect_clean.xlsx')\n","X_or = df.iloc[:,1:-1].values\n","y_or = df.iloc[:,-1].values\n","\n","# import mortality data\n","df_mort = pd.read_excel('/content/drive/My Drive/Colab_Notebooks/mortality.xlsx')\n","Xm = df_mort.iloc[:,1:-1].values\n","ym = df_mort.iloc[:,-1].values\n","\n","# resampling detection data\n","df_0 = df[df['TARGET']==0]\n","df_1 = df[df['TARGET']==1]\n","X_0 = resample(df_0, replace=True, n_samples=150)\n","X_1 = resample(df_1, replace=True, n_samples=150)\n","_ = pd.concat([X_0, X_1])\n","_.reset_index(drop=True, inplace=True)\n","X_re = _.iloc[:,1:-1].values\n","y_re = _.iloc[:,-1].values"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"FO6Cn9jHVD2j"},"source":["# Grid Search"]},{"cell_type":"markdown","metadata":{"id":"n90yc1thTaoE"},"source":["# With & Without Resampling"]},{"cell_type":"code","metadata":{"id":"ODCQ0wtJZZZ_","executionInfo":{"status":"ok","timestamp":1627528348241,"user_tz":240,"elapsed":117,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}}},"source":["sss = StratifiedShuffleSplit(n_splits= 5, test_size=0.2, train_size=0.8, random_state=0)"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"gKOTZGfhTqUc","executionInfo":{"status":"ok","timestamp":1627528348381,"user_tz":240,"elapsed":4,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}}},"source":["results_table  = pd.DataFrame(columns=['resample', 'non-re'], index=['test socre', 'cv score', 'mortality'])"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"O_xAv2BXTtbJ","executionInfo":{"status":"ok","timestamp":1627528362717,"user_tz":240,"elapsed":14339,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}}},"source":["param_grid_xgb = [{'n_estimators' : range(50, 200, 25), \n","                   'max_depth' : [2, 3, 4, 5, 6, 7]}]\n","\n","for i in range(2):\n","  if i == 0:\n","    xgb_re = GridSearchCV(xgboost.XGBClassifier(random_state=0), param_grid_xgb, cv=5, n_jobs=-1)\n","\n","    X_train_re, X_test_re, y_train_re, y_test_re = train_test_split(X_re, y_re, random_state=0)\n","\n","    xgb_re.fit(X_train_re, y_train_re)\n","\n","    results_table.iloc[0,0] = xgb_re.score(X_test_re, y_test_re)\n","    results_table.iloc[1,0] = xgb_re.best_score_\n","    results_table.iloc[2,0] = xgb_re.score(Xm, [1]*Xm.shape[0])\n","  else:\n","    xgb_or = GridSearchCV(xgboost.XGBClassifier(random_state=0), param_grid_xgb, cv=5, n_jobs=-1)\n","\n","    X_train_or, X_test_or, y_train_or, y_test_or = train_test_split(X_or, y_or, random_state=0)\n","\n","    xgb_or.fit(X_train_or, y_train_or)\n","\n","    results_table.iloc[0,1] = xgb_or.score(X_test_or, y_test_or)\n","    results_table.iloc[1,1] = xgb_or.best_score_\n","    results_table.iloc[2,1] = xgb_or.score(Xm, [1]*Xm.shape[0])"],"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pGFlXxAHHtrw"},"source":["# Comparison"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":136},"id":"LuxPmPcZHalI","executionInfo":{"status":"ok","timestamp":1621039733539,"user_tz":240,"elapsed":394,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}},"outputId":"c1eed1ac-7fde-4288-f47c-0cb6f4bb51ae"},"source":["results_table"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>resample</th>\n","      <th>non-re</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>test socre</th>\n","      <td>0.893333</td>\n","      <td>0.785714</td>\n","    </tr>\n","    <tr>\n","      <th>cv score</th>\n","      <td>0.897778</td>\n","      <td>0.794657</td>\n","    </tr>\n","    <tr>\n","      <th>mortality</th>\n","      <td>0.469333</td>\n","      <td>0.504</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            resample    non-re\n","test socre  0.893333  0.785714\n","cv score    0.897778  0.794657\n","mortality   0.469333     0.504"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XLDhvVR_f1Yr","executionInfo":{"status":"ok","timestamp":1621039975088,"user_tz":240,"elapsed":275,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}},"outputId":"9f17fa95-3ef6-485a-a0ef-78bff5f7ae4b"},"source":["recall_score(y_test_re, xgb_re.predict(X_test_re))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8421052631578947"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EVBKfL-Dr6ki","executionInfo":{"status":"ok","timestamp":1621042910818,"user_tz":240,"elapsed":294,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}},"outputId":"bde84496-2d78-4a42-89c3-aa42ff4a7f59"},"source":["precision_score(y_test_re, xgb_re.predict(X_test_re))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9411764705882353"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KsFDptwMsz9k","executionInfo":{"status":"ok","timestamp":1621043143360,"user_tz":240,"elapsed":244,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}},"outputId":"a7ee51c1-789b-45df-b447-b8f9fca22b1b"},"source":["confusion = confusion_matrix(y_test_re, xgb_re.predict(X_test_re))\n","confusion[1][1]/(confusion[1][1]+confusion[0][1])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9411764705882353"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"markdown","metadata":{"id":"GEOlZ4NVqTUz"},"source":["# Feature Importance"]},{"cell_type":"code","metadata":{"id":"pDrCKtB2qVFp","executionInfo":{"status":"ok","timestamp":1627528362719,"user_tz":240,"elapsed":6,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}}},"source":["def fi(x):\n","    plt.style.use('seaborn')\n","    feature_list = ['AGE', 'WBC', 'Piastrine', 'Neutrofili', 'Linfociti', 'Monociti',\n","             'Eosinofili', 'Basofili', 'PCR', 'AST', 'ALT', 'ALP', 'GGT', 'LDH']\n","    df_fi = pd.DataFrame(columns=['features', 'importance'])\n","    df_fi['importance'] = x\n","    df_fi['features'] = feature_list\n","    df_fi = df_fi.sort_values('importance', ascending=True)  \n","    plt.barh(range(len(df_fi)), df_fi['importance'], tick_label = df_fi['features'])\n","    plt.show()"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":347},"id":"Ca7j3hVhqWUa","executionInfo":{"status":"ok","timestamp":1627528362865,"user_tz":240,"elapsed":150,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}},"outputId":"a77cb10b-74b5-415e-f111-344747d14774"},"source":["# resampled\n","xgb_fi = xgb_re.best_estimator_.feature_importances_\n","fi(xgb_fi)"],"execution_count":7,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x396 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"5ynn4F3rsrVX","executionInfo":{"status":"ok","timestamp":1620707579562,"user_tz":240,"elapsed":392,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}},"outputId":"f1f4c4b0-0696-46bc-9dad-65b995a76863"},"source":["# original\n","xgb_fi = xgb_or.best_estimator_.feature_importances_\n","fi(xgb_fi)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"NFaYHu-AuZv7"},"source":["# Import 2nd Detection Data"]},{"cell_type":"code","metadata":{"id":"zoFs5dGiumxL"},"source":["# from collections import Counter\n","\n","# df_detection = pd.read_excel('/content/drive/My Drive/Colab_Notebooks/May_2nd_data.xlsx')\n","\n","# result_2nd = xgb_re.predict(df_detection.iloc[:,1:-1].values)\n","\n","# x = Counter(df_detection.iloc[:,-1].values == result_2nd)\n","\n","# x[1]/(x[0]+x[1])"],"execution_count":null,"outputs":[]}]}