{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Iter LGB","provenance":[{"file_id":"1ZMU-SDOGlaGuzAETDUS_W2CZJj7TEOCe","timestamp":1619676359032}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"IO4qugkbHW-h"},"source":["# Library"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4XGoQWnNSXK0","executionInfo":{"status":"ok","timestamp":1627528266316,"user_tz":240,"elapsed":13602,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}},"outputId":"af67be69-ea82-47fd-dc9a-08b80aaed259"},"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import sklearn\n","\n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import cross_val_score\n","from sklearn.model_selection import train_test_split\n","import lightgbm as lgb\n","\n","from sklearn.experimental import enable_iterative_imputer\n","from sklearn.impute import IterativeImputer\n","\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import confusion_matrix\n","\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import precision_score, recall_score\n","from sklearn.metrics import f1_score\n","from sklearn.metrics import precision_recall_curve\n","from sklearn.metrics import roc_curve\n","from sklearn.metrics import roc_auc_score\n","from numpy import std\n","\n","from numpy import std\n","\n","from sklearn.model_selection import StratifiedShuffleSplit\n","from sklearn.utils import resample\n","\n","import scipy as sc\n","\n","from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"_s3L68kWHU6l"},"source":["# Data Preparation"]},{"cell_type":"code","metadata":{"id":"1v4rdGdDUFoy","executionInfo":{"status":"ok","timestamp":1627528283169,"user_tz":240,"elapsed":739,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}}},"source":["# import detection data\n","df = pd.read_excel('/content/drive/My Drive/Colab_Notebooks/covid_detect_clean.xlsx')\n","X_or = df.iloc[:,1:-1].values\n","y_or = df.iloc[:,-1].values\n","\n","# import mortality data\n","df_mort = pd.read_excel('/content/drive/My Drive/Colab_Notebooks/mortality.xlsx')\n","Xm = df_mort.iloc[:,1:-1].values\n","ym = df_mort.iloc[:,-1].values\n","\n","# resampling detection data\n","df_0 = df[df['TARGET']==0]\n","df_1 = df[df['TARGET']==1]\n","X_0 = resample(df_0, replace=True, n_samples=150)\n","X_1 = resample(df_1, replace=True, n_samples=150)\n","_ = pd.concat([X_0, X_1])\n","_.reset_index(drop=True, inplace=True)\n","X_re = _.iloc[:,1:-1].values\n","y_re = _.iloc[:,-1].values"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"n90yc1thTaoE"},"source":["# With & Without Resampling"]},{"cell_type":"code","metadata":{"id":"ODCQ0wtJZZZ_","executionInfo":{"status":"ok","timestamp":1627528284439,"user_tz":240,"elapsed":123,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}}},"source":["sss = StratifiedShuffleSplit(n_splits= 5, test_size=0.2, train_size=0.8, random_state=0)"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"gKOTZGfhTqUc","executionInfo":{"status":"ok","timestamp":1627528284836,"user_tz":240,"elapsed":1,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}}},"source":["results_table  = pd.DataFrame(columns=['resample', 'non-re'], index=['test socre', 'cv score', 'mortality'])"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"O_xAv2BXTtbJ","executionInfo":{"status":"ok","timestamp":1627528297248,"user_tz":240,"elapsed":8776,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}}},"source":["param_grid_lgb = [{'n_estimators' : range(50, 200, 25), \n","                   'max_depth' : [2, 3, 4, 5, 6, 7]}]\n","\n","for i in range(2):\n","  if i == 0:\n","    lgb_re = GridSearchCV(lgb.LGBMClassifier(random_state=0), param_grid_lgb, cv=5, n_jobs=-1)\n","\n","    X_train_re, X_test_re, y_train_re, y_test_re = train_test_split(X_re, y_re, random_state=0)\n","\n","    imp_iter = IterativeImputer(random_state=0, max_iter=10000)\n","    X_train_re_iter = imp_iter.fit_transform(X_train_re)\n","    X_test_re_iter  = imp_iter.transform(X_test_re)\n","    lgb_re.fit(X_train_re_iter, y_train_re)\n","\n","    Xm_iter = imp_iter.transform(Xm)\n","\n","    results_table.iloc[0,0] = lgb_re.score(X_test_re_iter, y_test_re)\n","    results_table.iloc[1,0] = lgb_re.best_score_\n","    results_table.iloc[2,0] = lgb_re.score(Xm_iter, [1]*Xm_iter.shape[0])\n","  else:\n","    lgb_or = GridSearchCV(lgb.LGBMClassifier(random_state=0), param_grid_lgb, cv=5, n_jobs=-1)\n","\n","    X_train_or, X_test_or, y_train_or, y_test_or = train_test_split(X_or, y_or, random_state=0)\n","\n","    imp_iter = IterativeImputer(random_state=0, max_iter=10000)\n","    X_train_or_iter = imp_iter.fit_transform(X_train_or)\n","    X_test_or_iter  = imp_iter.transform(X_test_or)\n","    lgb_or.fit(X_train_or_iter, y_train_or)\n","\n","    Xm_iter = imp_iter.transform(Xm)\n","\n","    results_table.iloc[0,1] = lgb_or.score(X_test_or_iter, y_test_or)\n","    results_table.iloc[1,1] = lgb_or.best_score_\n","    results_table.iloc[2,1] = lgb_or.score(Xm_iter, [1]*Xm_iter.shape[0])"],"execution_count":6,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pGFlXxAHHtrw"},"source":["# Comparison"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":136},"id":"LuxPmPcZHalI","executionInfo":{"status":"ok","timestamp":1621040267218,"user_tz":240,"elapsed":637,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}},"outputId":"92b9f28b-608f-4b5c-f07d-50d90f9cb87b"},"source":["results_table"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>resample</th>\n","      <th>non-re</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>test socre</th>\n","      <td>0.88</td>\n","      <td>0.742857</td>\n","    </tr>\n","    <tr>\n","      <th>cv score</th>\n","      <td>0.884444</td>\n","      <td>0.799652</td>\n","    </tr>\n","    <tr>\n","      <th>mortality</th>\n","      <td>0.301333</td>\n","      <td>0.498667</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            resample    non-re\n","test socre      0.88  0.742857\n","cv score    0.884444  0.799652\n","mortality   0.301333  0.498667"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uwgo2UdohshQ","executionInfo":{"status":"ok","timestamp":1621042598900,"user_tz":240,"elapsed":432,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}},"outputId":"2bde8cb8-c625-40fd-a454-bf42488711c1"},"source":["recall_score(y_test_re, lgb_re.predict(X_test_re_iter))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9210526315789473"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T9QnkkODrrKK","executionInfo":{"status":"ok","timestamp":1621042850501,"user_tz":240,"elapsed":443,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}},"outputId":"df87c36d-d546-4e01-d1f3-3bbeeda2b7c2"},"source":["precision_score(y_test_re, lgb_re.predict(X_test_re_iter))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8536585365853658"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B-38MRQPsr55","executionInfo":{"status":"ok","timestamp":1621043109307,"user_tz":240,"elapsed":553,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}},"outputId":"9f69110c-1712-4c64-ba40-8193180e0bf1"},"source":["confusion = confusion_matrix(y_test_re, lgb_re.predict(X_test_re_iter))\n","confusion[1][1]/(confusion[1][1]+confusion[0][1])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.8536585365853658"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"GEOlZ4NVqTUz"},"source":["# Feature Importance"]},{"cell_type":"code","metadata":{"id":"pDrCKtB2qVFp","executionInfo":{"status":"ok","timestamp":1627528297250,"user_tz":240,"elapsed":4,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}}},"source":["def fi(x):\n","    plt.style.use('seaborn')\n","    feature_list = ['AGE', 'WBC', 'Piastrine', 'Neutrofili', 'Linfociti', 'Monociti',\n","             'Eosinofili', 'Basofili', 'PCR', 'AST', 'ALT', 'ALP', 'GGT', 'LDH']\n","    df_fi = pd.DataFrame(columns=['features', 'importance'])\n","    df_fi['importance'] = x\n","    df_fi['features'] = feature_list\n","    df_fi = df_fi.sort_values('importance', ascending=True)  \n","    plt.barh(range(len(df_fi)), df_fi['importance'], tick_label = df_fi['features'])\n","    plt.show()"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":347},"id":"Ca7j3hVhqWUa","executionInfo":{"status":"ok","timestamp":1627528297547,"user_tz":240,"elapsed":300,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}},"outputId":"c6b99c40-6a24-4619-d23b-da5af885dfd2"},"source":["# resampled\n","lgb_fi = lgb_re.best_estimator_.feature_importances_\n","fi(lgb_fi)"],"execution_count":8,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x396 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"YQGwcpizVQjb","executionInfo":{"status":"ok","timestamp":1620707517128,"user_tz":240,"elapsed":23013,"user":{"displayName":"Jiajun Gao","photoUrl":"","userId":"08493068663897313502"}},"outputId":"a0b10c78-e198-4758-b030-41fe608992be"},"source":["# original\n","lgb_fi = lgb_or.best_estimator_.feature_importances_\n","fi(lgb_fi)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"NFaYHu-AuZv7"},"source":["#Import 2nd Detection Data"]},{"cell_type":"code","metadata":{"id":"zoFs5dGiumxL"},"source":["# from collections import Counter\n","\n","# df_detection = pd.read_excel('/content/drive/My Drive/Colab_Notebooks/May_2nd_data.xlsx')\n","\n","# result_2nd = lgb_re.predict(df_detection.iloc[:,1:-1].values)\n","\n","# x = Counter(df_detection.iloc[:,-1].values == result_2nd)\n","\n","# x[1]/(x[0]+x[1])"],"execution_count":null,"outputs":[]}]}